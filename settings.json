{
  "code_actions_on_format": {
    "source.removeUnusedImports": true,
    "source.organizeImports": true,
    "source.fixAll.eslint": true,
    "source.addMissingImports": true,
    "source.fixAll.ruff": true,
    "source.organizeImports.ruff": true
  },
  "git_panel": {
    "scrollbar": {
      "show": "never"
    }
  },
  "outline_panel": {
    "auto_fold_dirs": false
  },
  "gutter": {
    "folds": false
  },
  "fast_scroll_sensitivity": 10.0,
  "use_system_window_tabs": false,
  "icon_theme": "Material Icon Theme",
  "theme": "Everforest Dark Hard",
  "base_keymap": "VSCode",
  "vim_mode": true,

  // Font settings (matching Neovim)
  "ui_font_family": "JetBrainsMonoNL Nerd Font",
  "buffer_font_family": "JetBrainsMonoNL Nerd Font",
  "ui_font_size": 16.0,
  "buffer_font_size": 14,
  "terminal": {
    "default_height": 500,
    "button": true
  },
  "cursor_blink": true,
  "relative_line_numbers": true,
  "vertical_scroll_margin": 10,
  "format_on_save": "on",
  "auto_update": true,
  "linked_edits": true,
  "show_whitespaces": "none",
  "soft_wrap": "editor_width",
  "file_finder": {
    "include_ignored": false
  },

  // Vim configuration (matching Neovim)
  "vim": {
    "use_system_clipboard": "always",
    // "use_multiline_find": true,
    "use_smartcase_find": false,
    "toggle_relative_line_numbers": true,
    "highlight_on_yank_duration": 200
  },

  // UI preferences
  "minimap": {
    "show": "never"
  },
  "scrollbar": {
    "show": "never"
  },

  "toolbar": {
    "code_actions": false
  },
  "project_panel": {
    "auto_fold_dirs": false,
    "default_width": 500,
    "show_diagnostics": "errors",
    "auto_reveal_entries": true
  },
  "tab_bar": {
    "show": false
  },

  "tabs": {
    "file_icons": true
  },

  // Git integration (matching gitsigns)
  "git": {
    "inline_blame": {
      "show_commit_summary": true
    }
  },

  // Language settings (matching Neovim LSP config)
  "languages": {
    "JavaScript": {
      "formatter": "prettier",
      "enable_language_server": true
    },
    "TypeScript": {
      "formatter": "prettier",
      "enable_language_server": true
    },
    "TSX": {
      "formatter": "prettier",
      "enable_language_server": true
    },
    "JSON": {
      "formatter": "prettier"
    },
    "Go": {
      "formatter": "language_server",
      "enable_language_server": true
    },
    "Rust": {
      "formatter": "language_server",
      "enable_language_server": true
    },
    "Python": {
      "formatter": {
        "language_server": {
          "name": "ruff"
        }
      },
      "enable_language_server": true,
      "language_servers": ["basedpyright", "ruff"],
      "format_on_save": "on",
      "ensure_final_newline_on_save": true,
      "remove_trailing_whitespace_on_save": true,
      "inlay_hints": {
        "enabled": false,
        "show_type_hints": false,
        "show_parameter_hints": false,
        "show_other_hints": false
      }
    },
    "C": {
      "enable_language_server": true
    },
    "C++": {
      "enable_language_server": true
    }
  },

  // LSP configuration
  "lsp": {
    "eslint": {
      "settings": {
        "format": true,
        "autoFixOnSave": true,
        "codeActionsOnSave": {
          "source.fixAll.eslint": true
        }
      }
    },
    "typescript-language-server": {
      "initialization_options": {
        "preferences": {
          "importModuleSpecifier": "relative",
          "includeCompletionsForModuleExports": true,
          "includeCompletionsWithInsertText": true
        }
      }
    },
    "basedpyright": {
      "settings": {
        "basedpyright": {
          "analysis": {
            "diagnosticMode": "openFilesOnly",
            "typeCheckingMode": "basic",
            "autoImportCompletions": true,
            "autoSearchPaths": true,
            "useLibraryCodeForTypes": true,
            "completeFunctionParens": true,
            "indexing": true,
            "logLevel": "Warning",
            "diagnosticSeverityOverrides": {
              "reportGeneralTypeIssues": "none",
              "reportMissingImports": "error",
              "reportPrivateImportUsage": "none",
              "reportMissingTypeStubs": "none",
              "reportImportCycles": "none",
              "reportUnusedImport": "none",
              "reportUnusedClass": "none",
              "reportUnusedFunction": "none",
              "reportUnusedVariable": "none",
              "reportDuplicateImport": "none",
              "reportPrivateUsage": "none",
              "reportTypeCommentUsage": "none",
              "reportIncompatibleMethodOverride": "error",
              "reportIncompatibleVariableOverride": "error",
              "reportInconsistentConstructor": "error",
              "reportOverlappingOverload": "error",
              "reportMissingParameterType": "none",
              "reportUnnecessaryTypeIgnoreComment": "none",
              "reportUnknownParameterType": "none",
              "reportUnknownArgumentType": "none",
              "reportUnknownLambdaType": "none",
              "reportUnknownVariableType": "none",
              "reportUnknownMemberType": "none",
              "reportMissingTypeArgument": "none",
              "reportUndefinedVariable": "error",
              "reportUnboundVariable": "error",
              "reportInvalidStringEscapeSequence": "error",
              "reportInvalidTypeVarUse": "error",
              "reportCallInDefaultInitializer": "none",
              "reportUnnecessaryIsInstance": "none",
              "reportUnnecessaryCast": "none",
              "reportUnnecessaryComparison": "none",
              "reportAssertAlwaysTrue": "none",
              "reportSelfClsParameterName": "none",
              "reportImplicitStringConcatenation": "none",
              "reportInvalidStubStatement": "error",
              "reportIncompleteStub": "none",
              "reportUnsupportedDunderAll": "none",
              "reportUnusedCallResult": "none",
              "reportUnusedCoroutine": "error",
              "reportUnusedExcept": "none",
              "reportUnusedExpression": "none",
              "reportUnnecessaryContains": "none",
              "reportUnnecessaryDict": "none",
              "reportMatchNotExhaustive": "none",
              "reportShadowedImports": "none"
            },
            "inlayHints": {
              "variableTypes": false,
              "functionReturnTypes": false,
              "callArgumentNames": false,
              "pytestParameters": false,
              "parameterTypes": false
            }
          }
        },
        "python": {
          "analysis": {
            "extraPaths": [],
            "stubPath": "typings",
            "typeshedPaths": [],
            "include": ["**/*.py"],
            "exclude": [
              "**/node_modules",
              "**/__pycache__",
              ".git",
              ".venv",
              "venv"
            ]
          },
          "venvPath": ".",
          "pythonPath": "python",
          "defaultInterpreterPath": "python",
          "condaPath": "conda"
        },
        "intelliSense": {
          "autoImportCompletions": true,
          "completeFunctionParens": true,
          "quickSuggestions": {
            "strings": true
          },
          "suggestOnTriggerCharacters": true
        }
      }
    },
    "ruff": {
      "settings": {
        "lint": {
          "enable": true,
          "run": "onSave",
          "args": [
            "--select",
            "E9,F",
            "--ignore",
            "E501,E402,E731,W,F401,F841",
            "--line-length",
            "120"
          ]
        },
        "format": {
          "enable": true,
          "args": ["--line-length", "120"]
        },
        "codeAction": {
          "fixViolation": {
            "enable": true
          },
          "disableRuleComment": {
            "enable": true
          }
        },
        "organizeImports": true,
        "fixAll": true,
        "showNotifications": "off",
        "lineLength": 120,
        "perFileIgnores": {
          "**/__init__.py": ["F401", "F403"],
          "**/tests/**": ["S101", "S105", "S106"],
          "**/{test,tests}_*.py": ["S101", "S105", "S106"]
        }
      }
    },
    "gopls": {
      "initialization_options": {
        "analyses": {
          "unusedparams": true, // Detect unused function parameters
          "ST1000": false, // Disable package comment warnings
          "ST1020": false, // Disable exported method comment warnings
          "ST1022": false, // Disable exported function comment warnings
          "unusedvariable": true, // Detect unused variables
          "shadow": true, // Detect variable shadowing
          "nilness": true, // Detect potential nil pointer dereferences
          "fieldalignment": false // Check struct field alignment (can be noisy)
        },
        "staticcheck": true, // Enable staticcheck analysis
        "gofumpt": true, // Use gofumpt for formatting
        "usePlaceholders": true, // Add parameter placeholders in completions
        "completeUnimported": true, // Suggest completions from unimported packages
        "deepCompletion": true, // Enable deep completions
        "matcher": "fuzzy", // Use fuzzy matching for completions
        "symbolMatcher": "fuzzy", // Use fuzzy matching for symbols
        "hoverKind": "FullDocumentation", // Show full documentation on hover
        "linkTarget": "pkg.go.dev", // Link to pkg.go.dev for documentation
        "codelenses": {
          // Clickable actions in editor
          "gc_details": false, // Hide garbage collection details
          "generate": true, // Show "go generate" commands
          "regenerate_cgo": true, // Show CGO regeneration options
          "test": true, // Show "run test" options
          "tidy": true, // Show "go mod tidy" commands
          "upgrade_dependency": true, // Show dependency upgrade options
          "vendor": true // Show vendor commands
        },
        "hints": {
          // Inlay hints (inline type information)
          "assignVariableTypes": false, // Don't show variable types on assignment
          "compositeLiteralFields": false, // Show field names in struct literals
          "compositeLiteralTypes": false, // Don't show types in composite literals
          "constantValues": false, // Show constant values
          "functionTypeParameters": false, // Show function type parameters
          "parameterNames": false, // Show parameter names in function calls
          "rangeVariableTypes": false // Don't show types for range variables
        }
      }
    }
  },

  // AI assistant configuration (matching your Neovim setup)
  "agent": {
    "use_modifier_to_send": true,
    "play_sound_when_agent_done": false,
    "always_allow_tool_actions": true,
    "inline_assistant_model": {
      "provider": "zed.dev",
      "model": "claude-sonnet-4-5"
    },
    "default_profile": "write",
    "default_model": {
      "provider": "copilot_chat",
      "model": "gpt-5"
    },
    "dock": "right"
  },
  "diagnostics": {
    "include_warnings": false,
    "inline": {
      "enabled": true,
      "max_severity": "error"
    }
  },
  "search": {
    "button": true,
    "case_sensitive": false,
    "whole_word": false,
    "regex": false
  },
  // "buffer_search": {
  //   "case_sensitive": false,
  //   "whole_word": false,
  //   "regex": false,
  //   "use_regex": false
  // },
  // "project_search": {
  //   "case_sensitive": false,
  //   "whole_word": false,
  //   "regex": false,
  //   "use_regex": false
  // },
  // Additional features
  "show_edit_predictions": true,
  "inline_code_actions": true,

  "features": {
    "edit_prediction_provider": "copilot"
  },

  "inlay_hints": {
    "show_other_hints": false,
    "show_parameter_hints": false,
    "show_type_hints": false,
    "show_value_hints": false,
    "enabled": false
  },
  "indent_guides": {
    "enabled": true,
    "coloring": "indent_aware"
  },

  "search_wrap": true,
  "seed_search_query_from_cursor": "selection",
  "use_smartcase_search": false,
  "status_bar": {
    "active_language_button": true
  },
  "preview_tabs": {
    "enable_preview_from_code_navigation": true
  },

  // Privacy settings
  "telemetry": {
    "diagnostics": false,
    "metrics": false
  },

  // Confirmation settings
  "confirm_quit": true,

  // Window settings
  "title_bar": {
    "show_branch_icon": true
  },

  // Additional UI settings
  "rounded_selection": true,
  "lsp_document_colors": "inlay",
  "hide_mouse": "on_typing_and_movement",
  "wrap_guides": [120],
  "show_wrap_guides": true,

  // File types
  "file_types": {
    "javascript": ["*.js"],
    "k1": ["*.k1"]
  }
}
